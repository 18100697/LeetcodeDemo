//方法1：可以实现基本功能，特殊情况无法通过
class Solution {
    public int myAtoi(String str) {
        StringBuffer sb = new StringBuffer();
        for(int i = 0; i < str.length(); i++) {
            if (str.charAt(i) == '-') {
                sb.append(str.charAt(i));
                continue;
            }
            if ('0' <= str.charAt(i) && str.charAt(i) <= '9') {
                sb.append(str.charAt(i));
            }
        }
        int result =  Integer.parseInt(sb.toString());
        System.out.println(result);
        return result;
    }
}

//1.数字字符串转数字：str.charAt(i) - '0' 可以得出原数字值

//方法2：
class Solution {
    public int myatoi(String str) {
        int n = str.length, i = 0, flag = 0, res = 0;
        if(str.isEmpty()) {
            return 0;
        }
        while(i < n && str.charAt(i) == ' ') {
            i++;
        }
        if(i < n && (str.charAt(i) == '+' || str.charAt(i) == '-')) {
            flag = (str.charAt(i++) == '+') ? 1 : -1;
        }
        while(i < n && str.charAt(i) > '0' && str.charAt(i) < '9') {
            if(res > Integer.MAX_VALUE / 10 || (res == Integer.MAX_VALUE && str.charAt(i) - '0'> 7)) {
                return flag == 1 ? Integer.MAX_VALUE : Integer.MIX_VALUE;
            }
            res = res * 10 + str.charAt(i);
        }
        return res * flag;
    }
}



